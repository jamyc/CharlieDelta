trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/charlie/*

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: ContainerRegistryServiceConnection
  imageRepository: charlie
  containerRegistry: acrcloudengineerjamy2.azurecr.io
  tag: $(Build.BuildId)
  imagePullSecret: acrcloudengineer-auth

  vmImageName: ubuntu-latest

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: src/charlie/Dockerfile
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

          - upload: src/charlie/manifests
            artifact: manifests

  - stage: DeployDev
    displayName: Deploy Dev
    dependsOn: Build

    jobs:
      - deployment: DeployDev
        displayName: Deploy Dev
        pool:
          vmImage: $(vmImageName)
        environment: CharlieDev
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: manifests

                - task: KubectlInstaller@0
                  displayName: Kubectl installer
                  inputs:
                    kubectlVersion: 1.18.17

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    namespace: dev
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                    kubernetesServiceConnection: KubernetesDevServiceConnection

                - task: KubernetesManifest@0
                  name: bake
                  displayName: Bake K8s manifests from kustomization path
                  inputs:
                    action: bake
                    renderType: kustomize
                    kustomizationPath: $(Pipeline.Workspace)/manifests/overlays/dev

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    namespace: dev
                    manifests: $(bake.manifestsBundle)
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
                    kubernetesServiceConnection: KubernetesDevServiceConnection

  - stage: DeployProd
    displayName: Deploy Prod
    dependsOn: DeployDev

    jobs:
      - deployment: DeployProd
        displayName: Deploy Prod
        pool:
          vmImage: $(vmImageName)
        environment: CharlieProd
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: manifests

                - task: KubectlInstaller@0
                  displayName: Kubectl installer
                  inputs:
                    kubectlVersion: 1.18.17

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    namespace: prod
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                    kubernetesServiceConnection: KubernetesProdServiceConnection

                - task: KubernetesManifest@0
                  name: bake
                  displayName: Bake K8s manifests from kustomization path
                  inputs:
                    action: bake
                    renderType: kustomize
                    kustomizationPath: $(Pipeline.Workspace)/manifests/overlays/prod

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    namespace: prod
                    manifests: $(bake.manifestsBundle)
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
                    kubernetesServiceConnection: KubernetesProdServiceConnection
